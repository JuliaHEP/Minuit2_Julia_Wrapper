// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlMinuit2.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Minuit2::MnHesse> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Minuit2::MnHesse> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Minuit2::MnHesse
// signature to use in the veto file: ROOT::Minuit2::MnHesse
struct JlROOT_Minuit2_MnHesse: public Wrapper {

  JlROOT_Minuit2_MnHesse(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Minuit2::MnHesse (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:41:7
    jlcxx::TypeWrapper<ROOT::Minuit2::MnHesse>  t = jlModule.add_type<ROOT::Minuit2::MnHesse>("ROOT!Minuit2!MnHesse");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::MnHesse>>(new jlcxx::TypeWrapper<ROOT::Minuit2::MnHesse>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MnHesse::MnHesse(unsigned int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:48:4
    t.constructor<unsigned int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MnHesse::MnHesse(const ROOT::Minuit2::MnStrategy &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:51:4
    t.constructor<const ROOT::Minuit2::MnStrategy &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for ROOT::Minuit2::MnUserParameterState ROOT::Minuit2::MnHesse::operator()(const ROOT::Minuit2::FCNBase &, const ROOT::Minuit2::MnUserParameterState &, unsigned int) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::Minuit2::MnUserParameterState ROOT::Minuit2::MnHesse::operator()(const ROOT::Minuit2::FCNBase &, const ROOT::Minuit2::MnUserParameterState &, unsigned int)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:54:25
    t.method("paren", [](ROOT::Minuit2::MnHesse const& a, const ROOT::Minuit2::FCNBase & arg0, const ROOT::Minuit2::MnUserParameterState & arg1)->ROOT::Minuit2::MnUserParameterState { return a.operator()(arg0, arg1); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const& a, const ROOT::Minuit2::FCNBase & arg0, const ROOT::Minuit2::MnUserParameterState & arg1, unsigned int arg2)->ROOT::Minuit2::MnUserParameterState { return a.operator()(arg0, arg1, arg2); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const* a, const ROOT::Minuit2::FCNBase & arg0, const ROOT::Minuit2::MnUserParameterState & arg1)->ROOT::Minuit2::MnUserParameterState { return a->operator()(arg0, arg1); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const* a, const ROOT::Minuit2::FCNBase & arg0, const ROOT::Minuit2::MnUserParameterState & arg1, unsigned int arg2)->ROOT::Minuit2::MnUserParameterState { return a->operator()(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MnHesse::operator()(const ROOT::Minuit2::FCNBase &, ROOT::Minuit2::FunctionMinimum &, unsigned int) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MnHesse::operator()(const ROOT::Minuit2::FCNBase &, ROOT::Minuit2::FunctionMinimum &, unsigned int)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:60:9
    t.method("paren", [](ROOT::Minuit2::MnHesse const& a, const ROOT::Minuit2::FCNBase & arg0, ROOT::Minuit2::FunctionMinimum & arg1)->void { a.operator()(arg0, arg1); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const& a, const ROOT::Minuit2::FCNBase & arg0, ROOT::Minuit2::FunctionMinimum & arg1, unsigned int arg2)->void { a.operator()(arg0, arg1, arg2); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const* a, const ROOT::Minuit2::FCNBase & arg0, ROOT::Minuit2::FunctionMinimum & arg1)->void { a->operator()(arg0, arg1); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const* a, const ROOT::Minuit2::FCNBase & arg0, ROOT::Minuit2::FunctionMinimum & arg1, unsigned int arg2)->void { a->operator()(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for ROOT::Minuit2::MinimumState ROOT::Minuit2::MnHesse::operator()(const ROOT::Minuit2::MnFcn &, const ROOT::Minuit2::MinimumState &, const ROOT::Minuit2::MnUserTransformation &, unsigned int) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::Minuit2::MinimumState ROOT::Minuit2::MnHesse::operator()(const ROOT::Minuit2::MnFcn &, const ROOT::Minuit2::MinimumState &, const ROOT::Minuit2::MnUserTransformation &, unsigned int)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:65:4
    t.method("paren", [](ROOT::Minuit2::MnHesse const& a, const ROOT::Minuit2::MnFcn & arg0, const ROOT::Minuit2::MinimumState & arg1, const ROOT::Minuit2::MnUserTransformation & arg2)->ROOT::Minuit2::MinimumState { return a.operator()(arg0, arg1, arg2); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const& a, const ROOT::Minuit2::MnFcn & arg0, const ROOT::Minuit2::MinimumState & arg1, const ROOT::Minuit2::MnUserTransformation & arg2, unsigned int arg3)->ROOT::Minuit2::MinimumState { return a.operator()(arg0, arg1, arg2, arg3); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const* a, const ROOT::Minuit2::MnFcn & arg0, const ROOT::Minuit2::MinimumState & arg1, const ROOT::Minuit2::MnUserTransformation & arg2)->ROOT::Minuit2::MinimumState { return a->operator()(arg0, arg1, arg2); });
    t.method("paren", [](ROOT::Minuit2::MnHesse const* a, const ROOT::Minuit2::MnFcn & arg0, const ROOT::Minuit2::MinimumState & arg1, const ROOT::Minuit2::MnUserTransformation & arg2, unsigned int arg3)->ROOT::Minuit2::MinimumState { return a->operator()(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for unsigned int ROOT::Minuit2::MnHesse::Ncycles() (" __HERE__ ")");
    // signature to use in the veto list: unsigned int ROOT::Minuit2::MnHesse::Ncycles()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:68:17
    t.method("Ncycles", [](ROOT::Minuit2::MnHesse const& a)->unsigned int { return a.Ncycles(); });
    t.method("Ncycles", [](ROOT::Minuit2::MnHesse const* a)->unsigned int { return a->Ncycles(); });

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MnHesse::Tolerstp() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MnHesse::Tolerstp()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:69:11
    t.method("Tolerstp", [](ROOT::Minuit2::MnHesse const& a)->double { return a.Tolerstp(); });
    t.method("Tolerstp", [](ROOT::Minuit2::MnHesse const* a)->double { return a->Tolerstp(); });

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MnHesse::TolerG2() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MnHesse::TolerG2()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnHesse.h:70:11
    t.method("TolerG2", [](ROOT::Minuit2::MnHesse const& a)->double { return a.TolerG2(); });
    t.method("TolerG2", [](ROOT::Minuit2::MnHesse const* a)->double { return a->TolerG2(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::MnHesse>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Minuit2_MnHesse(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Minuit2_MnHesse(module));
}
