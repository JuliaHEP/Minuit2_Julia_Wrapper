// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlMinuit2.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Minuit2::MinuitParameter> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Minuit2::MinuitParameter> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Minuit2::MinuitParameter
// signature to use in the veto file: ROOT::Minuit2::MinuitParameter
struct JlROOT_Minuit2_MinuitParameter: public Wrapper {

  JlROOT_Minuit2_MinuitParameter(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Minuit2::MinuitParameter (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:33:7
    jlcxx::TypeWrapper<ROOT::Minuit2::MinuitParameter>  t = jlModule.add_type<ROOT::Minuit2::MinuitParameter>("ROOT!Minuit2!MinuitParameter");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::MinuitParameter>>(new jlcxx::TypeWrapper<ROOT::Minuit2::MinuitParameter>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::MinuitParameter(unsigned int, const std::string &, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:44:4
    t.constructor<unsigned int, const std::string &, double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("num"), jlcxx::arg("name"), jlcxx::arg("val")    );


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::MinuitParameter(unsigned int, const std::string &, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:51:4
    t.constructor<unsigned int, const std::string &, double, double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("num"), jlcxx::arg("name"), jlcxx::arg("val"), jlcxx::arg("err")    );


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::MinuitParameter(unsigned int, const std::string &, double, double, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:58:4
    t.constructor<unsigned int, const std::string &, double, double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("num"), jlcxx::arg("name"), jlcxx::arg("val"), jlcxx::arg("err"), jlcxx::arg("min"), jlcxx::arg("max")    );


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::MinuitParameter(const ROOT::Minuit2::MinuitParameter &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:71:4
    t.constructor<const ROOT::Minuit2::MinuitParameter &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("par")    );

    DEBUG_MSG("Adding wrapper for ROOT::Minuit2::MinuitParameter & ROOT::Minuit2::MinuitParameter::operator=(const ROOT::Minuit2::MinuitParameter &) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::Minuit2::MinuitParameter & ROOT::Minuit2::MinuitParameter::operator=(const ROOT::Minuit2::MinuitParameter &)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:78:21
    t.method("assign", [](ROOT::Minuit2::MinuitParameter& a, const ROOT::Minuit2::MinuitParameter & arg0)->ROOT::Minuit2::MinuitParameter & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("par"));
    t.method("assign", [](ROOT::Minuit2::MinuitParameter* a, const ROOT::Minuit2::MinuitParameter & arg0)->ROOT::Minuit2::MinuitParameter & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("par"));

    DEBUG_MSG("Adding wrapper for unsigned int ROOT::Minuit2::MinuitParameter::Number() (" __HERE__ ")");
    // signature to use in the veto list: unsigned int ROOT::Minuit2::MinuitParameter::Number()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:96:17
    t.method("Number", [](ROOT::Minuit2::MinuitParameter const& a)->unsigned int { return a.Number(); }, jlcxx::arg("this"));
    t.method("Number", [](ROOT::Minuit2::MinuitParameter const* a)->unsigned int { return a->Number(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const std::string & ROOT::Minuit2::MinuitParameter::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const std::string & ROOT::Minuit2::MinuitParameter::GetName()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:98:23
    t.method("GetName", [](ROOT::Minuit2::MinuitParameter const& a)->const std::string & { return a.GetName(); }, jlcxx::arg("this"));
    t.method("GetName", [](ROOT::Minuit2::MinuitParameter const* a)->const std::string & { return a->GetName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const char * ROOT::Minuit2::MinuitParameter::Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * ROOT::Minuit2::MinuitParameter::Name()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:100:16
    t.method("Name", [](ROOT::Minuit2::MinuitParameter const& a) { return (std::string)a.Name(); }, jlcxx::arg("this"));
    t.method("Name", [](ROOT::Minuit2::MinuitParameter const* a) { return (std::string)a->Name(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MinuitParameter::Value() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MinuitParameter::Value()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:102:11
    t.method("Value", [](ROOT::Minuit2::MinuitParameter const& a)->double { return a.Value(); }, jlcxx::arg("this"));
    t.method("Value", [](ROOT::Minuit2::MinuitParameter const* a)->double { return a->Value(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MinuitParameter::Error() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MinuitParameter::Error()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:103:11
    t.method("Error", [](ROOT::Minuit2::MinuitParameter const& a)->double { return a.Error(); }, jlcxx::arg("this"));
    t.method("Error", [](ROOT::Minuit2::MinuitParameter const* a)->double { return a->Error(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::SetName(const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::SetName(const std::string &)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:106:9
    t.method("SetName", [](ROOT::Minuit2::MinuitParameter& a, const std::string & arg0)->void { a.SetName(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("SetName", [](ROOT::Minuit2::MinuitParameter* a, const std::string & arg0)->void { a->SetName(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::SetValue(double) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::SetValue(double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:108:9
    t.method("SetValue", [](ROOT::Minuit2::MinuitParameter& a, double arg0)->void { a.SetValue(arg0); }, jlcxx::arg("this"), jlcxx::arg("val"));
    t.method("SetValue", [](ROOT::Minuit2::MinuitParameter* a, double arg0)->void { a->SetValue(arg0); }, jlcxx::arg("this"), jlcxx::arg("val"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::SetError(double) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::SetError(double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:109:9
    t.method("SetError", [](ROOT::Minuit2::MinuitParameter& a, double arg0)->void { a.SetError(arg0); }, jlcxx::arg("this"), jlcxx::arg("err"));
    t.method("SetError", [](ROOT::Minuit2::MinuitParameter* a, double arg0)->void { a->SetError(arg0); }, jlcxx::arg("this"), jlcxx::arg("err"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::SetLimits(double, double) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::SetLimits(double, double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:110:9
    t.method("SetLimits", [](ROOT::Minuit2::MinuitParameter& a, double arg0, double arg1)->void { a.SetLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("low"), jlcxx::arg("up"));
    t.method("SetLimits", [](ROOT::Minuit2::MinuitParameter* a, double arg0, double arg1)->void { a->SetLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("low"), jlcxx::arg("up"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::SetUpperLimit(double) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::SetUpperLimit(double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:123:9
    t.method("SetUpperLimit", [](ROOT::Minuit2::MinuitParameter& a, double arg0)->void { a.SetUpperLimit(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));
    t.method("SetUpperLimit", [](ROOT::Minuit2::MinuitParameter* a, double arg0)->void { a->SetUpperLimit(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::SetLowerLimit(double) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::SetLowerLimit(double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:131:9
    t.method("SetLowerLimit", [](ROOT::Minuit2::MinuitParameter& a, double arg0)->void { a.SetLowerLimit(arg0); }, jlcxx::arg("this"), jlcxx::arg("low"));
    t.method("SetLowerLimit", [](ROOT::Minuit2::MinuitParameter* a, double arg0)->void { a->SetLowerLimit(arg0); }, jlcxx::arg("this"), jlcxx::arg("low"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::RemoveLimits() (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::RemoveLimits()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:139:9
    t.method("RemoveLimits", [](ROOT::Minuit2::MinuitParameter& a)->void { a.RemoveLimits(); }, jlcxx::arg("this"));
    t.method("RemoveLimits", [](ROOT::Minuit2::MinuitParameter* a)->void { a->RemoveLimits(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::Fix() (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::Fix()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:147:9
    t.method("Fix", [](ROOT::Minuit2::MinuitParameter& a)->void { a.Fix(); }, jlcxx::arg("this"));
    t.method("Fix", [](ROOT::Minuit2::MinuitParameter* a)->void { a->Fix(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MinuitParameter::Release() (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::MinuitParameter::Release()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:148:9
    t.method("Release", [](ROOT::Minuit2::MinuitParameter& a)->void { a.Release(); }, jlcxx::arg("this"));
    t.method("Release", [](ROOT::Minuit2::MinuitParameter* a)->void { a->Release(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::MinuitParameter::IsConst() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::MinuitParameter::IsConst()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:151:9
    t.method("IsConst", [](ROOT::Minuit2::MinuitParameter const& a)->bool { return a.IsConst(); }, jlcxx::arg("this"));
    t.method("IsConst", [](ROOT::Minuit2::MinuitParameter const* a)->bool { return a->IsConst(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::MinuitParameter::IsFixed() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::MinuitParameter::IsFixed()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:152:9
    t.method("IsFixed", [](ROOT::Minuit2::MinuitParameter const& a)->bool { return a.IsFixed(); }, jlcxx::arg("this"));
    t.method("IsFixed", [](ROOT::Minuit2::MinuitParameter const* a)->bool { return a->IsFixed(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::MinuitParameter::HasLimits() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::MinuitParameter::HasLimits()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:154:9
    t.method("HasLimits", [](ROOT::Minuit2::MinuitParameter const& a)->bool { return a.HasLimits(); }, jlcxx::arg("this"));
    t.method("HasLimits", [](ROOT::Minuit2::MinuitParameter const* a)->bool { return a->HasLimits(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::MinuitParameter::HasLowerLimit() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::MinuitParameter::HasLowerLimit()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:155:9
    t.method("HasLowerLimit", [](ROOT::Minuit2::MinuitParameter const& a)->bool { return a.HasLowerLimit(); }, jlcxx::arg("this"));
    t.method("HasLowerLimit", [](ROOT::Minuit2::MinuitParameter const* a)->bool { return a->HasLowerLimit(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::MinuitParameter::HasUpperLimit() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::MinuitParameter::HasUpperLimit()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:156:9
    t.method("HasUpperLimit", [](ROOT::Minuit2::MinuitParameter const& a)->bool { return a.HasUpperLimit(); }, jlcxx::arg("this"));
    t.method("HasUpperLimit", [](ROOT::Minuit2::MinuitParameter const* a)->bool { return a->HasUpperLimit(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MinuitParameter::LowerLimit() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MinuitParameter::LowerLimit()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:157:11
    t.method("LowerLimit", [](ROOT::Minuit2::MinuitParameter const& a)->double { return a.LowerLimit(); }, jlcxx::arg("this"));
    t.method("LowerLimit", [](ROOT::Minuit2::MinuitParameter const* a)->double { return a->LowerLimit(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MinuitParameter::UpperLimit() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MinuitParameter::UpperLimit()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MinuitParameter.h:158:11
    t.method("UpperLimit", [](ROOT::Minuit2::MinuitParameter const& a)->double { return a.UpperLimit(); }, jlcxx::arg("this"));
    t.method("UpperLimit", [](ROOT::Minuit2::MinuitParameter const* a)->double { return a->UpperLimit(); }, jlcxx::arg("this"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::MinuitParameter>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Minuit2_MinuitParameter(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Minuit2_MinuitParameter(module));
}
