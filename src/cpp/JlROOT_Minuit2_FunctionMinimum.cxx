// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlMinuit2.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Minuit2::FunctionMinimum> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Minuit2::FunctionMinimum> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Minuit2::FunctionMinimum
// signature to use in the veto file: ROOT::Minuit2::FunctionMinimum
struct JlROOT_Minuit2_FunctionMinimum: public Wrapper {

  JlROOT_Minuit2_FunctionMinimum(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Minuit2::FunctionMinimum (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:37:7
    jlcxx::TypeWrapper<ROOT::Minuit2::FunctionMinimum>  t = jlModule.add_type<ROOT::Minuit2::FunctionMinimum>("ROOT!Minuit2!FunctionMinimum");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::FunctionMinimum>>(new jlcxx::TypeWrapper<ROOT::Minuit2::FunctionMinimum>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::FunctionMinimum::FunctionMinimum(const ROOT::Minuit2::MinimumSeed &, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:48:4
    t.constructor<const ROOT::Minuit2::MinimumSeed &, double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("seed"), jlcxx::arg("up")    );

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::FunctionMinimum::Add(const ROOT::Minuit2::MinimumState &, ROOT::Minuit2::FunctionMinimum::Status) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::FunctionMinimum::Add(const ROOT::Minuit2::MinimumState &, ROOT::Minuit2::FunctionMinimum::Status)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:63:9
    t.method("Add", [](ROOT::Minuit2::FunctionMinimum& a, const ROOT::Minuit2::MinimumState & arg0)->void { a.Add(arg0); }, jlcxx::arg("this"), jlcxx::arg("state"));
    t.method("Add", [](ROOT::Minuit2::FunctionMinimum& a, const ROOT::Minuit2::MinimumState & arg0, ROOT::Minuit2::FunctionMinimum::Status arg1)->void { a.Add(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("state"), jlcxx::arg("status"));
    t.method("Add", [](ROOT::Minuit2::FunctionMinimum* a, const ROOT::Minuit2::MinimumState & arg0)->void { a->Add(arg0); }, jlcxx::arg("this"), jlcxx::arg("state"));
    t.method("Add", [](ROOT::Minuit2::FunctionMinimum* a, const ROOT::Minuit2::MinimumState & arg0, ROOT::Minuit2::FunctionMinimum::Status arg1)->void { a->Add(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("state"), jlcxx::arg("status"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::MinimumSeed & ROOT::Minuit2::FunctionMinimum::Seed() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::MinimumSeed & ROOT::Minuit2::FunctionMinimum::Seed()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:73:23
    t.method("Seed", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::MinimumSeed & { return a.Seed(); }, jlcxx::arg("this"));
    t.method("Seed", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::MinimumSeed & { return a->Seed(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::MnUserParameterState & ROOT::Minuit2::FunctionMinimum::UserState() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::MnUserParameterState & ROOT::Minuit2::FunctionMinimum::UserState()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:77:32
    t.method("UserState", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::MnUserParameterState & { return a.UserState(); }, jlcxx::arg("this"));
    t.method("UserState", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::MnUserParameterState & { return a->UserState(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::MnUserParameters & ROOT::Minuit2::FunctionMinimum::UserParameters() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::MnUserParameters & ROOT::Minuit2::FunctionMinimum::UserParameters()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:83:28
    t.method("UserParameters", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::MnUserParameters & { return a.UserParameters(); }, jlcxx::arg("this"));
    t.method("UserParameters", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::MnUserParameters & { return a->UserParameters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::MnUserCovariance & ROOT::Minuit2::FunctionMinimum::UserCovariance() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::MnUserCovariance & ROOT::Minuit2::FunctionMinimum::UserCovariance()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:84:28
    t.method("UserCovariance", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::MnUserCovariance & { return a.UserCovariance(); }, jlcxx::arg("this"));
    t.method("UserCovariance", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::MnUserCovariance & { return a->UserCovariance(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::MinimumState & ROOT::Minuit2::FunctionMinimum::State() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::MinimumState & ROOT::Minuit2::FunctionMinimum::State()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:87:24
    t.method("State", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::MinimumState & { return a.State(); }, jlcxx::arg("this"));
    t.method("State", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::MinimumState & { return a->State(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::MinimumParameters & ROOT::Minuit2::FunctionMinimum::Parameters() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::MinimumParameters & ROOT::Minuit2::FunctionMinimum::Parameters()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:88:29
    t.method("Parameters", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::MinimumParameters & { return a.Parameters(); }, jlcxx::arg("this"));
    t.method("Parameters", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::MinimumParameters & { return a->Parameters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::MinimumError & ROOT::Minuit2::FunctionMinimum::Error() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::MinimumError & ROOT::Minuit2::FunctionMinimum::Error()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:89:24
    t.method("Error", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::MinimumError & { return a.Error(); }, jlcxx::arg("this"));
    t.method("Error", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::MinimumError & { return a->Error(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const ROOT::Minuit2::FunctionGradient & ROOT::Minuit2::FunctionMinimum::Grad() (" __HERE__ ")");
    // signature to use in the veto list: const ROOT::Minuit2::FunctionGradient & ROOT::Minuit2::FunctionMinimum::Grad()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:90:28
    t.method("Grad", [](ROOT::Minuit2::FunctionMinimum const& a)->const ROOT::Minuit2::FunctionGradient & { return a.Grad(); }, jlcxx::arg("this"));
    t.method("Grad", [](ROOT::Minuit2::FunctionMinimum const* a)->const ROOT::Minuit2::FunctionGradient & { return a->Grad(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::FunctionMinimum::Fval() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::FunctionMinimum::Fval()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:91:11
    t.method("Fval", [](ROOT::Minuit2::FunctionMinimum const& a)->double { return a.Fval(); }, jlcxx::arg("this"));
    t.method("Fval", [](ROOT::Minuit2::FunctionMinimum const* a)->double { return a->Fval(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::FunctionMinimum::Edm() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::FunctionMinimum::Edm()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:92:11
    t.method("Edm", [](ROOT::Minuit2::FunctionMinimum const& a)->double { return a.Edm(); }, jlcxx::arg("this"));
    t.method("Edm", [](ROOT::Minuit2::FunctionMinimum const* a)->double { return a->Edm(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for int ROOT::Minuit2::FunctionMinimum::NFcn() (" __HERE__ ")");
    // signature to use in the veto list: int ROOT::Minuit2::FunctionMinimum::NFcn()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:93:8
    t.method("NFcn", [](ROOT::Minuit2::FunctionMinimum const& a)->int { return a.NFcn(); }, jlcxx::arg("this"));
    t.method("NFcn", [](ROOT::Minuit2::FunctionMinimum const* a)->int { return a->NFcn(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::FunctionMinimum::Up() (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::FunctionMinimum::Up()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:95:11
    t.method("Up", [](ROOT::Minuit2::FunctionMinimum const& a)->double { return a.Up(); }, jlcxx::arg("this"));
    t.method("Up", [](ROOT::Minuit2::FunctionMinimum const* a)->double { return a->Up(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::IsValid() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::IsValid()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:96:9
    t.method("IsValid", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.IsValid(); }, jlcxx::arg("this"));
    t.method("IsValid", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->IsValid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HasValidParameters() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HasValidParameters()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:97:9
    t.method("HasValidParameters", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HasValidParameters(); }, jlcxx::arg("this"));
    t.method("HasValidParameters", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HasValidParameters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HasValidCovariance() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HasValidCovariance()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:98:9
    t.method("HasValidCovariance", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HasValidCovariance(); }, jlcxx::arg("this"));
    t.method("HasValidCovariance", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HasValidCovariance(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HasAccurateCovar() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HasAccurateCovar()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:99:9
    t.method("HasAccurateCovar", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HasAccurateCovar(); }, jlcxx::arg("this"));
    t.method("HasAccurateCovar", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HasAccurateCovar(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HasPosDefCovar() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HasPosDefCovar()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:100:9
    t.method("HasPosDefCovar", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HasPosDefCovar(); }, jlcxx::arg("this"));
    t.method("HasPosDefCovar", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HasPosDefCovar(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HasMadePosDefCovar() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HasMadePosDefCovar()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:101:9
    t.method("HasMadePosDefCovar", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HasMadePosDefCovar(); }, jlcxx::arg("this"));
    t.method("HasMadePosDefCovar", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HasMadePosDefCovar(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HesseFailed() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HesseFailed()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:102:9
    t.method("HesseFailed", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HesseFailed(); }, jlcxx::arg("this"));
    t.method("HesseFailed", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HesseFailed(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HasCovariance() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HasCovariance()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:103:9
    t.method("HasCovariance", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HasCovariance(); }, jlcxx::arg("this"));
    t.method("HasCovariance", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HasCovariance(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::IsAboveMaxEdm() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::IsAboveMaxEdm()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:104:9
    t.method("IsAboveMaxEdm", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.IsAboveMaxEdm(); }, jlcxx::arg("this"));
    t.method("IsAboveMaxEdm", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->IsAboveMaxEdm(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for bool ROOT::Minuit2::FunctionMinimum::HasReachedCallLimit() (" __HERE__ ")");
    // signature to use in the veto list: bool ROOT::Minuit2::FunctionMinimum::HasReachedCallLimit()
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:105:9
    t.method("HasReachedCallLimit", [](ROOT::Minuit2::FunctionMinimum const& a)->bool { return a.HasReachedCallLimit(); }, jlcxx::arg("this"));
    t.method("HasReachedCallLimit", [](ROOT::Minuit2::FunctionMinimum const* a)->bool { return a->HasReachedCallLimit(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::FunctionMinimum::SetErrorDef(double) (" __HERE__ ")");
    // signature to use in the veto list: void ROOT::Minuit2::FunctionMinimum::SetErrorDef(double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/FunctionMinimum.h:107:9
    t.method("SetErrorDef", [](ROOT::Minuit2::FunctionMinimum& a, double arg0)->void { a.SetErrorDef(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));
    t.method("SetErrorDef", [](ROOT::Minuit2::FunctionMinimum* a, double arg0)->void { a->SetErrorDef(arg0); }, jlcxx::arg("this"), jlcxx::arg("up"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::FunctionMinimum>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Minuit2_FunctionMinimum(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Minuit2_FunctionMinimum(module));
}
