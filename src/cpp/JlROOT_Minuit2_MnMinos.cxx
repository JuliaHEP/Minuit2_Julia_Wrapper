// this file was auto-generated by wrapit v1.4.0-3-g14eb9a6
#include "Wrapper.h"

#include "jlMinuit2.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Minuit2::MnMinos> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Minuit2::MnMinos> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Minuit2::MnMinos
// signature to use in the veto file: ROOT::Minuit2::MnMinos
struct JlROOT_Minuit2_MnMinos: public Wrapper {

  JlROOT_Minuit2_MnMinos(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Minuit2::MnMinos (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:33:7
    jlcxx::TypeWrapper<ROOT::Minuit2::MnMinos>  t = jlModule.add_type<ROOT::Minuit2::MnMinos>("ROOT!Minuit2!MnMinos");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::MnMinos>>(new jlcxx::TypeWrapper<ROOT::Minuit2::MnMinos>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MnMinos::MnMinos(const ROOT::Minuit2::FCNBase &, const ROOT::Minuit2::FunctionMinimum &, unsigned int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:37:4
    t.constructor<const ROOT::Minuit2::FCNBase &, const ROOT::Minuit2::FunctionMinimum &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const ROOT::Minuit2::FCNBase &, const ROOT::Minuit2::FunctionMinimum &, unsigned int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void ROOT::Minuit2::MnMinos::MnMinos(const ROOT::Minuit2::FCNBase &, const ROOT::Minuit2::FunctionMinimum &, const ROOT::Minuit2::MnStrategy &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:40:4
    t.constructor<const ROOT::Minuit2::FCNBase &, const ROOT::Minuit2::FunctionMinimum &, const ROOT::Minuit2::MnStrategy &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for std::pair<double,double> ROOT::Minuit2::MnMinos::operator()(unsigned int, unsigned int, double) (" __HERE__ ")");
    // signature to use in the veto list: std::pair<double,double> ROOT::Minuit2::MnMinos::operator()(unsigned int, unsigned int, double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:46:30
    t.method("paren", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0)->std::pair<double,double> { return a.operator()(arg0); });
    t.method("paren", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1)->std::pair<double,double> { return a.operator()(arg0, arg1); });
    t.method("paren", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1, double arg2)->std::pair<double,double> { return a.operator()(arg0, arg1, arg2); });
    t.method("paren", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0)->std::pair<double,double> { return a->operator()(arg0); });
    t.method("paren", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1)->std::pair<double,double> { return a->operator()(arg0, arg1); });
    t.method("paren", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1, double arg2)->std::pair<double,double> { return a->operator()(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MnMinos::Lower(unsigned int, unsigned int, double) (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MnMinos::Lower(unsigned int, unsigned int, double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:50:11
    t.method("Lower", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0)->double { return a.Lower(arg0); });
    t.method("Lower", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1)->double { return a.Lower(arg0, arg1); });
    t.method("Lower", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1, double arg2)->double { return a.Lower(arg0, arg1, arg2); });
    t.method("Lower", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0)->double { return a->Lower(arg0); });
    t.method("Lower", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1)->double { return a->Lower(arg0, arg1); });
    t.method("Lower", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1, double arg2)->double { return a->Lower(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for double ROOT::Minuit2::MnMinos::Upper(unsigned int, unsigned int, double) (" __HERE__ ")");
    // signature to use in the veto list: double ROOT::Minuit2::MnMinos::Upper(unsigned int, unsigned int, double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:51:11
    t.method("Upper", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0)->double { return a.Upper(arg0); });
    t.method("Upper", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1)->double { return a.Upper(arg0, arg1); });
    t.method("Upper", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1, double arg2)->double { return a.Upper(arg0, arg1, arg2); });
    t.method("Upper", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0)->double { return a->Upper(arg0); });
    t.method("Upper", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1)->double { return a->Upper(arg0, arg1); });
    t.method("Upper", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1, double arg2)->double { return a->Upper(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for ROOT::Minuit2::MnCross ROOT::Minuit2::MnMinos::Loval(unsigned int, unsigned int, double) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::Minuit2::MnCross ROOT::Minuit2::MnMinos::Loval(unsigned int, unsigned int, double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:53:12
    t.method("Loval", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0)->ROOT::Minuit2::MnCross { return a.Loval(arg0); });
    t.method("Loval", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1)->ROOT::Minuit2::MnCross { return a.Loval(arg0, arg1); });
    t.method("Loval", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1, double arg2)->ROOT::Minuit2::MnCross { return a.Loval(arg0, arg1, arg2); });
    t.method("Loval", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0)->ROOT::Minuit2::MnCross { return a->Loval(arg0); });
    t.method("Loval", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1)->ROOT::Minuit2::MnCross { return a->Loval(arg0, arg1); });
    t.method("Loval", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1, double arg2)->ROOT::Minuit2::MnCross { return a->Loval(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for ROOT::Minuit2::MnCross ROOT::Minuit2::MnMinos::Upval(unsigned int, unsigned int, double) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::Minuit2::MnCross ROOT::Minuit2::MnMinos::Upval(unsigned int, unsigned int, double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:54:12
    t.method("Upval", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0)->ROOT::Minuit2::MnCross { return a.Upval(arg0); });
    t.method("Upval", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1)->ROOT::Minuit2::MnCross { return a.Upval(arg0, arg1); });
    t.method("Upval", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1, double arg2)->ROOT::Minuit2::MnCross { return a.Upval(arg0, arg1, arg2); });
    t.method("Upval", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0)->ROOT::Minuit2::MnCross { return a->Upval(arg0); });
    t.method("Upval", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1)->ROOT::Minuit2::MnCross { return a->Upval(arg0, arg1); });
    t.method("Upval", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1, double arg2)->ROOT::Minuit2::MnCross { return a->Upval(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for ROOT::Minuit2::MinosError ROOT::Minuit2::MnMinos::Minos(unsigned int, unsigned int, double) (" __HERE__ ")");
    // signature to use in the veto list: ROOT::Minuit2::MinosError ROOT::Minuit2::MnMinos::Minos(unsigned int, unsigned int, double)
    // defined in /Users/mato/.julia/artifacts/4afa81fd17c8d2616a0895f609579f19a4e4e4b7/include/Minuit2/Minuit2/MnMinos.h:58:15
    t.method("Minos", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0)->ROOT::Minuit2::MinosError { return a.Minos(arg0); });
    t.method("Minos", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1)->ROOT::Minuit2::MinosError { return a.Minos(arg0, arg1); });
    t.method("Minos", [](ROOT::Minuit2::MnMinos const& a, unsigned int arg0, unsigned int arg1, double arg2)->ROOT::Minuit2::MinosError { return a.Minos(arg0, arg1, arg2); });
    t.method("Minos", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0)->ROOT::Minuit2::MinosError { return a->Minos(arg0); });
    t.method("Minos", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1)->ROOT::Minuit2::MinosError { return a->Minos(arg0, arg1); });
    t.method("Minos", [](ROOT::Minuit2::MnMinos const* a, unsigned int arg0, unsigned int arg1, double arg2)->ROOT::Minuit2::MinosError { return a->Minos(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Minuit2::MnMinos>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Minuit2_MnMinos(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Minuit2_MnMinos(module));
}
